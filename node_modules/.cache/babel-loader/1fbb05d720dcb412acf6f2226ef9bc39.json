{"ast":null,"code":"var _jsxFileName = \"/home/tech/client/src/components/MainPanel/Student.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\nimport { getContactus } from '../../actions/classRoomActions';\nimport ClassAverage from './ClassAverage';\n\nclass Student extends Component {\n  componentDidMount() {\n    //============ calling api ==============\n    this.props.getContactus();\n  }\n\n  render() {\n    let totalStudentRecord = 0,\n        fullClassAverage = 0; //=============== redux state using by props =============\n\n    const markAverage = this.props.markAverage;\n    var result = Object.keys(markAverage).map(function (key) {\n      return markAverage[key];\n    });\n    var newResult = Object.keys(result).map(function (key) {\n      return markAverage[key];\n    }); //=============== redux state ==============\n\n    let abc = newResult.map((res, i) => {\n      if (res !== undefined) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"col-sm-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, res.students.map((stud, i) => (totalStudentRecord = stud.name, fullClassAverage = Math.round((mark.Maths + mark.English + mark.Science) / 3), React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          className: \"card mt-4 pt-4 pl-4 pb-4 pr-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, stud.marks.map((mark, i) => React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"bt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, stud.name), React.createElement(\"span\", {\n          className: \"pull-right text-info font-weight-bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, Math.round((mark.Maths + mark.English + mark.Science) / 3), \"%\")), React.createElement(\"div\", {\n          className: \"d-flex mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            minWidth: \"125px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Math\"), React.createElement(ProgressBar, {\n          width: Math.round(mark.Maths),\n          color: \"blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            minWidth: \"125px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"English\"), React.createElement(ProgressBar, {\n          width: Math.round(mark.English),\n          color: \"blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            minWidth: \"125px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Science\"), React.createElement(ProgressBar, {\n          width: Math.round(mark.Science),\n          color: \"blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })))))))));\n      }\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ClassAverage, {\n      totalStudent: totalStudentRecord,\n      fullClassAverages: fullClassAverage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), abc, React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nStudent.propTypes = {\n  // ============= validating function ===============\n  getContactus: PropTypes.func.isRequired // ============= map State to props===============\n\n};\n\nconst mapStateToProps = state => ({\n  markAverage: state.markAverage\n});\n\nexport default connect(mapStateToProps, {\n  getContactus\n})(Student);","map":{"version":3,"sources":["/home/tech/client/src/components/MainPanel/Student.js"],"names":["React","Component","Fragment","connect","PropTypes","ProgressBar","getContactus","ClassAverage","Student","componentDidMount","props","render","totalStudentRecord","fullClassAverage","markAverage","result","Object","keys","map","key","newResult","abc","res","i","undefined","students","stud","name","Math","round","mark","Maths","English","Science","marks","minWidth","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ProgressBar from './ProgressBar';\nimport { getContactus } from '../../actions/classRoomActions'\nimport ClassAverage from './ClassAverage'\n\nclass Student extends Component {\n    componentDidMount() {\n//============ calling api ==============\n         this.props.getContactus() \n    }\n    render() {\n        let totalStudentRecord = 0, fullClassAverage=0\n//=============== redux state using by props =============\n        const { markAverage } = this.props\n\n        var result = Object.keys(markAverage).map(function(key) {\n                        return markAverage[key]\n                    })\n\n        var newResult = Object.keys(result).map(function(key) {\n                            return markAverage[key]\n                        })\n//=============== redux state ==============\n        let abc = newResult.map((res, i) => {\n                if(res !== undefined){\n                    return(\n                        <div key={i} className=\"col-sm-5\">                                    \n                            {res.students.map((stud, i) => ( \n                                totalStudentRecord =stud.name, \n                                fullClassAverage = Math.round((mark.Maths + mark.English + mark.Science)/3),                 \n                                <div key={i} >\n                                    <div key={i} className=\"card mt-4 pt-4 pl-4 pb-4 pr-4\"> \n                                        {stud.marks.map((mark, i) => (\n                                                                                    \n                                        <div key={i}>\n                                            <div className=\"bt-4\">\n                                                <span className=\"text-primary\">{stud.name}</span>\n                                                <span className=\"pull-right text-info font-weight-bold\">\n                                                    {Math.round((mark.Maths + mark.English + mark.Science)/3)}%\n                                                </span>\n                                            </div>\n                                            <div className=\"d-flex mt-4\">\n                                                <span style={{minWidth: \"125px\"}}>Math</span>\n                                                <ProgressBar width={Math.round(mark.Maths)} color=\"blue\" />\n                                            </div>\n                                            <div className=\"d-flex\">\n                                                <span style={{minWidth: \"125px\"}}>English</span>\n                                                <ProgressBar width={Math.round(mark.English)} color=\"blue\" />\n                                            </div>\n                                            <div className=\"d-flex\">\n                                                <span style={{minWidth: \"125px\"}}>Science</span>\n                                                <ProgressBar width={Math.round(mark.Science)} color=\"blue\" />\n                                            </div>\n                                        </div>\n                                        ))}\n                                    </div>\n                                </div>                                    \n                            ))}                                    \n                        </div>\n                    )\n                }\n            })\n        return(\n            <Fragment>\n{/* ======================== Student Average Component ======================= */}\n                <ClassAverage \n                    totalStudent={totalStudentRecord}\n                    fullClassAverages = {fullClassAverage}\n                 />\n{/* ======================= Student Record Card ============================== */}\n                <div className=\"row\">\n                    <div className=\"col-sm-1\"></div>\n                    {abc}\n                    <div className=\"col-sm-1\"></div>\n                </div> \n            </Fragment>\n        )\n    }\n}\nStudent.propTypes = {\n// ============= validating function ===============\n    getContactus: PropTypes.func.isRequired,\n}\n// ============= map State to props===============\nconst mapStateToProps = state => ({\n    markAverage: state.markAverage\n})\nexport default connect(mapStateToProps, {getContactus})(Student);"]},"metadata":{},"sourceType":"module"}