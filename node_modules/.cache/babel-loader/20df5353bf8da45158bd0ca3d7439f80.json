{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS } from './types'; // Get current profile\n\nexport const getCurrentProfile = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get('/api/profile').then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: {}\n  }));\n}; // Create Profile\n\nexport const createProfile = (profileData, history) => dispatch => {\n  axios.post('/api/profile', profileData).then(res => history.push('/dashboard')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Get all profiles\n\nexport const getProfiles = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get('/api/profile/all').then(res => dispatch({\n    type: GET_PROFILES,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILES,\n    payload: null\n  }));\n}; // Profile loading\n\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING\n  };\n}; // Clear profile\n\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n};","map":{"version":3,"sources":["/home/tech/dhurava/client/src/actions/profileAction.js"],"names":["axios","GET_PROFILE","GET_PROFILES","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","GET_ERRORS","getCurrentProfile","dispatch","setProfileLoading","get","then","res","type","payload","data","catch","err","createProfile","profileData","history","post","push","response","getProfiles","clearCurrentProfile"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,UALF,QAMO,SANP,C,CAQA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAMC,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAR,EAAAA,KAAK,CACFS,GADH,CACO,cADP,EAEGC,IAFH,CAEQC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEX,WADC;AAEPY,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IACRT,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEX,WADC;AAEPY,IAAAA,OAAO,EAAE;AAFF,GAAD,CATZ;AAcD,CAhBM,C,CAmBP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0BZ,QAAQ,IAAI;AACjEP,EAAAA,KAAK,CACFoB,IADH,CACQ,cADR,EACwBF,WADxB,EAEGR,IAFH,CAEQC,GAAG,IAAIQ,OAAO,CAACE,IAAR,CAAa,YAAb,CAFf,EAGGN,KAHH,CAGSC,GAAG,IACRT,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEP,UADC;AAEPQ,IAAAA,OAAO,EAAEG,GAAG,CAACM,QAAJ,CAAaR;AAFf,GAAD,CAJZ;AASD,CAVM,C,CAaP;;AACA,OAAO,MAAMS,WAAW,GAAG,MAAMhB,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAR,EAAAA,KAAK,CACFS,GADH,CACO,kBADP,EAEGC,IAFH,CAEQC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,YADC;AAEPW,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IACRT,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,YADC;AAEPW,IAAAA,OAAO,EAAE;AAFF,GAAD,CATZ;AAcD,CAhBM,C,CAmBP;;AACA,OAAO,MAAML,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLI,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMqB,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLZ,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from 'axios';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_LOADING,\n  CLEAR_CURRENT_PROFILE,\n  GET_ERRORS,\n} from './types';\n\n// Get current profile\nexport const getCurrentProfile = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios\n    .get('/api/profile')\n    .then(res =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: {}\n      })\n    );\n};\n\n\n// Create Profile\nexport const createProfile = (profileData, history) => dispatch => {\n  axios\n    .post('/api/profile', profileData)\n    .then(res => history.push('/dashboard'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n\n// Get all profiles\nexport const getProfiles = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios\n    .get('/api/profile/all')\n    .then(res =>\n      dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_PROFILES,\n        payload: null\n      })\n    );\n};\n\n\n// Profile loading\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING\n  };\n};\n\n// Clear profile\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n};\n"]},"metadata":{},"sourceType":"module"}