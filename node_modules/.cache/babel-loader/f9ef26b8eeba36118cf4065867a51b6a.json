{"ast":null,"code":"var _jsxFileName = \"/home/tech/client/src/components/MainPanel/Student.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\nimport { getContactus } from '../../actions/classRoomActions';\n\nclass Student extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getContactus();\n  }\n\n  render() {\n    const markAverage = this.props.markAverage;\n    console.log(markAverage);\n    markAverage.map(dataNew => {\n      if (dataNew !== undefined) {\n        console.log(\"data\", dataNew);\n      }\n    });\n    var result = Object.keys(markAverage).map(function (key) {\n      return markAverage[key];\n    });\n    var newResult = Object.keys(result).map(function (key) {\n      return markAverage[key];\n    });\n    console.log(\"new\", newResult);\n    var maths = 0,\n        englishs = 0,\n        science = 0,\n        student = '';\n    newResult.map(res => {\n      if (res !== undefined) {\n        console.log(res.students);\n        res.students.map(stud => {\n          student = stud.name;\n          console.log(\"student\", stud.name);\n          let dd = Object.keys(stud).map(function (key) {\n            return stud[key];\n          });\n          dd.map(dat => {\n            //   console.log(dat)\n            if (dat.Maths !== undefined) {\n              maths = React.createElement(ProgressBar, {\n                width: Math.round(dat.Maths),\n                color: \"blue\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49\n                },\n                __self: this\n              });\n              englishs = dat.English;\n              science = dat.Science;\n            }\n\n            console.log(dat.Maths, \"maths\");\n            console.log(\"Marks\", (dat.Maths + dat.English + dat.Science) / 3);\n          });\n        });\n      }\n    });\n    let totalPercentage = (englishs / 3 + science / 3) / 3;\n    console.log(englishs, englishs / 3, science, science / 3);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card mt-4 pt-4 pl-4 pb-4 pr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, student), React.createElement(\"span\", {\n      className: \"float-sm-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, Math.round(totalPercentage), \"%\")), React.createElement(\"div\", {\n      className: \"d-flex flex-rows justify-content-betweenw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginInlineEnd: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Math\"), maths), React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-betweenw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginInlineEnd: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"English\"), React.createElement(ProgressBar, {\n      width: Math.round(englishs),\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-betweenw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Science\"), React.createElement(ProgressBar, {\n      width: Math.round(science / 3),\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nStudent.propTypes = {\n  getContactus: PropTypes.func.isRequired // markAverage: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  markAverage: state.markAverage\n});\n\nexport default connect(mapStateToProps, {\n  getContactus\n})(Student);","map":{"version":3,"sources":["/home/tech/client/src/components/MainPanel/Student.js"],"names":["React","Component","Fragment","connect","PropTypes","ProgressBar","getContactus","Student","constructor","props","componentDidMount","render","markAverage","console","log","map","dataNew","undefined","result","Object","keys","key","newResult","maths","englishs","science","student","res","students","stud","name","dd","dat","Maths","Math","round","English","Science","totalPercentage","marginInlineEnd","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ProgressBar from './ProgressBar';\nimport { getContactus } from '../../actions/classRoomActions'\n\nclass Student extends Component {\n    constructor(props){\n        super(props)\n    }\n    componentDidMount() {\n         this.props.getContactus() \n    }\n    render() {\n        const { markAverage } = this.props\n        console.log(markAverage)\n        markAverage.map((dataNew) => {\n            if(dataNew !== undefined){\n                console.log(\"data\", dataNew)\n            }\n        })\n        var result = Object.keys(markAverage).map(function(key) {\n            return markAverage[key];\n          });\n        var newResult = Object.keys(result).map(function(key) {\n            return markAverage[key];\n        })\n        console.log(\"new\", newResult)\n\n        var maths  = 0, \n            englishs = 0,\n            science = 0 ,\n            student = ''\n\n            newResult.map((res) => {\n                if(res !== undefined){\n                    console.log(res.students)\n                    res.students.map(stud => {\n                        student = stud.name\n                        console.log(\"student\", stud.name)\n                        let dd= Object.keys(stud).map(function(key) {\n                            return stud[key];\n                          });\n                          dd.map((dat) => {\n                            //   console.log(dat)\n                            if(dat.Maths !== undefined){\n                                maths = <ProgressBar width={Math.round(dat.Maths)} color=\"blue\" />\n                                englishs = dat.English\n                                science  = dat.Science\n                            }\n                            console.log(dat.Maths, \"maths\")\n                            console.log(\"Marks\", (dat.Maths + dat.English + dat.Science)/3)\n                          })\n                    })\n                }\n                          \n            })\n        let totalPercentage =  (englishs/3 + science/3)/3\n         console.log(englishs, englishs/3, science, science/3)\n         \n        return(\n            <Fragment>\n                <div className=\"card mt-4 pt-4 pl-4 pb-4 pr-4\">\n                    <div>\n                        <span className=\"\">{student}</span>\n                        <span className=\"float-sm-right\">{Math.round(totalPercentage)}%</span>\n                    </div>\n                    <div className=\"d-flex flex-rows justify-content-betweenw\">\n                        <span style={{marginInlineEnd: \"40px\"}}>Math</span>\n                        {maths}\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-betweenw\">\n                        <span style={{marginInlineEnd: \"40px\"}}>English</span>\n                        <ProgressBar width={Math.round(englishs)} color=\"blue\" />\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-betweenw\">\n                        <span>Science</span>\n                        <ProgressBar width={Math.round(science/3)} color=\"blue\" />\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\nStudent.propTypes = {\n    getContactus: PropTypes.func.isRequired,\n    // markAverage: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    markAverage: state.markAverage\n})\nexport default connect(mapStateToProps, {getContactus})(Student);"]},"metadata":{},"sourceType":"module"}