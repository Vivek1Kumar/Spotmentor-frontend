{"ast":null,"code":"var _jsxFileName = \"/home/tech/client/src/components/MainPanel/Student.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\nimport { getContactus } from '../../actions/classRoomActions';\n\nclass Student extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getContactus();\n  }\n\n  render() {\n    const markAverage = this.props.markAverage;\n    console.log(markAverage);\n    var result = Object.keys(markAverage).map(function (key) {\n      return markAverage[key];\n    });\n    var newResult = Object.keys(result).map(function (key) {\n      return markAverage[key];\n    });\n    console.log(\"new\", newResult);\n    var maths = 0,\n        englishs = 0,\n        science = 0,\n        student = '';\n    let dd = newResult.map(res => {\n      return;\n\n      if (res !== undefined) {\n        // console.log(res.students)\n        res.students.map(stud => // student = stud.name\n        React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, stud.name) // console.log(\"student\", stud.name)\n        // let dd= Object.keys(stud).map(function(key) {\n        //     return stud[key];\n        //   });\n        //   dd.map((dat) => {\n        //     //   console.log(dat)\n        //     if(dat.Maths !== undefined){\n        //         maths = maths+ dat.Maths\n        //         englishs = englishs + dat.English\n        //         science  = science + dat.Science\n        //     }\n        //     console.log(dat.Maths, \"maths\")\n        //     console.log(\"Marks\", (dat.Maths + dat.English + dat.Science)/3)\n        //   })\n        );\n      }\n    });\n    let totalPercentage = (maths / 3 + englishs / 3 + science / 3) / 3;\n    console.log(maths, maths / 3, englishs, englishs / 3, science, science / 3);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card mt-4 pt-4 pl-4 pb-4 pr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, student), React.createElement(\"span\", {\n      className: \"float-sm-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, Math.round(totalPercentage), \"%\")), React.createElement(\"div\", {\n      className: \"d-flex flex-rows justify-content-betweenw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginInlineEnd: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Math\"), React.createElement(ProgressBar, {\n      width: Math.round(maths / 3),\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-betweenw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginInlineEnd: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"English\"), React.createElement(ProgressBar, {\n      width: Math.round(englishs / 3),\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-betweenw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Science\"), React.createElement(ProgressBar, {\n      width: Math.round(science / 3),\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nStudent.propTypes = {\n  getContactus: PropTypes.func.isRequired,\n  markAverage: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  markAverage: state.markAverage\n});\n\nexport default connect(mapStateToProps, {\n  getContactus\n})(Student);","map":{"version":3,"sources":["/home/tech/client/src/components/MainPanel/Student.js"],"names":["React","Component","Fragment","connect","PropTypes","ProgressBar","getContactus","Student","constructor","props","componentDidMount","render","markAverage","console","log","result","Object","keys","map","key","newResult","maths","englishs","science","student","dd","res","undefined","students","stud","name","totalPercentage","Math","round","marginInlineEnd","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC5BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AACf,SAAKD,KAAL,CAAWH,YAAX;AACJ;;AACDK,EAAAA,MAAM,GAAG;AAAA,UACGC,WADH,GACmB,KAAKH,KADxB,CACGG,WADH;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,QAAIG,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA6B,UAASC,GAAT,EAAc;AACpD,aAAOP,WAAW,CAACO,GAAD,CAAlB;AACD,KAFU,CAAb;AAGA,QAAIC,SAAS,GAAGJ,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,GAApB,CAAwB,UAASC,GAAT,EAAc;AAClD,aAAOP,WAAW,CAACO,GAAD,CAAlB;AACH,KAFe,CAAhB;AAGAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBM,SAAnB;AAEA,QAAIC,KAAK,GAAI,CAAb;AAAA,QACIC,QAAQ,GAAG,CADf;AAAA,QAEIC,OAAO,GAAG,CAFd;AAAA,QAGIC,OAAO,GAAG,EAHd;AAKA,QAAIC,EAAE,GAAIL,SAAS,CAACF,GAAV,CAAeQ,GAAD,IAAS;AACzB;;AACA,UAAGA,GAAG,KAAKC,SAAX,EAAqB;AACjB;AACAD,QAAAA,GAAG,CAACE,QAAJ,CAAaV,GAAb,CAAiBW,IAAI,IACjB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,IAAV,CAFiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBJ;AAkBH;AAEJ,KAxBK,CAAV;AAyBA,QAAIC,eAAe,GAAI,CAACV,KAAK,GAAC,CAAN,GAAWC,QAAQ,GAAC,CAApB,GAAwBC,OAAO,GAAC,CAAjC,IAAoC,CAA3D;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ,EAAmBA,KAAK,GAAC,CAAzB,EAA4BC,QAA5B,EAAsCA,QAAQ,GAAC,CAA/C,EAAkDC,OAAlD,EAA2DA,OAAO,GAAC,CAAnE;AAEA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBC,OAApB,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCQ,IAAI,CAACC,KAAL,CAAWF,eAAX,CAAlC,MAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAE;AAACG,QAAAA,eAAe,EAAE;AAAlB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAC,CAAjB,CAApB;AAAyC,MAAA,KAAK,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,EASI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAE;AAACa,QAAAA,eAAe,EAAE;AAAlB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAWX,QAAQ,GAAC,CAApB,CAApB;AAA4C,MAAA,KAAK,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,EAaI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEU,IAAI,CAACC,KAAL,CAAWV,OAAO,GAAC,CAAnB,CAApB;AAA2C,MAAA,KAAK,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAbJ,CADJ,CADJ;AAsBH;;AAzE2B;;AA2EhChB,OAAO,CAAC4B,SAAR,GAAoB;AAChB7B,EAAAA,YAAY,EAAEF,SAAS,CAACgC,IAAV,CAAeC,UADb;AAEhBzB,EAAAA,WAAW,EAAER,SAAS,CAACkC,MAAV,CAAiBD;AAFd,CAApB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9B5B,EAAAA,WAAW,EAAE4B,KAAK,CAAC5B;AADW,CAAL,CAA7B;;AAGA,eAAeT,OAAO,CAACoC,eAAD,EAAkB;AAACjC,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,OAAzC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ProgressBar from './ProgressBar';\nimport { getContactus } from '../../actions/classRoomActions'\n\nclass Student extends Component {\n    constructor(props){\n        super(props)\n    }\n    componentDidMount() {\n         this.props.getContactus() \n    }\n    render() {\n        const { markAverage } = this.props\n        console.log(markAverage)\n        var result = Object.keys(markAverage).map(function(key) {\n            return markAverage[key];\n          });\n        var newResult = Object.keys(result).map(function(key) {\n            return markAverage[key];\n        })\n        console.log(\"new\", newResult)\n\n        var maths  = 0, \n            englishs = 0,\n            science = 0 ,\n            student = ''\n\n        let dd =  newResult.map((res) => {\n                return\n                if(res !== undefined){\n                    // console.log(res.students)\n                    res.students.map(stud => (\n                        // student = stud.name\n                        <li>{stud.name}</li>\n                        // console.log(\"student\", stud.name)\n                        // let dd= Object.keys(stud).map(function(key) {\n                        //     return stud[key];\n                        //   });\n                        //   dd.map((dat) => {\n                        //     //   console.log(dat)\n                        //     if(dat.Maths !== undefined){\n                        //         maths = maths+ dat.Maths\n                        //         englishs = englishs + dat.English\n                        //         science  = science + dat.Science\n                        //     }\n                        //     console.log(dat.Maths, \"maths\")\n                        //     console.log(\"Marks\", (dat.Maths + dat.English + dat.Science)/3)\n                        //   })\n                    ))\n                }\n                          \n            })\n        let totalPercentage =  (maths/3 +  englishs/3 + science/3)/3\n        console.log(maths, maths/3, englishs, englishs/3, science, science/3)\n         \n        return(\n            <Fragment>\n                <div className=\"card mt-4 pt-4 pl-4 pb-4 pr-4\">\n                    <div>\n                        <span className=\"\">{student}</span>\n                        <span className=\"float-sm-right\">{Math.round(totalPercentage)}%</span>\n                    </div>\n                    <div className=\"d-flex flex-rows justify-content-betweenw\">\n                        <span style={{marginInlineEnd: \"40px\"}}>Math</span>\n                        <ProgressBar width={Math.round(maths/3)} color=\"blue\" />\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-betweenw\">\n                        <span style={{marginInlineEnd: \"40px\"}}>English</span>\n                        <ProgressBar width={Math.round(englishs/3)} color=\"blue\" />\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-betweenw\">\n                        <span>Science</span>\n                        <ProgressBar width={Math.round(science/3)} color=\"blue\" />\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\nStudent.propTypes = {\n    getContactus: PropTypes.func.isRequired,\n    markAverage: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    markAverage: state.markAverage\n})\nexport default connect(mapStateToProps, {getContactus})(Student);"]},"metadata":{},"sourceType":"module"}